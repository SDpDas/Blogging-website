/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@azure/ms-rest-js')) :
    typeof define === 'function' && define.amd ? define(['exports', '@azure/ms-rest-js'], factory) :
    (global = global || self, factory((global.Azure = global.Azure || {}, global.Azure.CognitiveservicesTranslatortext = {}), global.msRest));
}(this, (function (exports, msRest) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */

    var index = /*#__PURE__*/Object.freeze({
        __proto__: null
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */
    var LanguagesResultTranslationLanguageCode = {
        serializedName: "LanguagesResult_translation_languageCode",
        type: {
            name: "Composite",
            className: "LanguagesResultTranslationLanguageCode",
            modelProperties: {
                name: {
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                nativeName: {
                    serializedName: "nativeName",
                    type: {
                        name: "String"
                    }
                },
                dir: {
                    serializedName: "dir",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var LanguagesResultTranslation = {
        serializedName: "LanguagesResult_translation",
        type: {
            name: "Composite",
            className: "LanguagesResultTranslation",
            modelProperties: {
                languageCode: {
                    serializedName: "languageCode",
                    type: {
                        name: "Composite",
                        className: "LanguagesResultTranslationLanguageCode"
                    }
                }
            }
        }
    };
    var LanguagesResultTransliterationLanguageCodeScriptsItemToScriptsItem = {
        serializedName: "LanguagesResult_transliteration_languageCode_scriptsItem_toScriptsItem",
        type: {
            name: "Composite",
            className: "LanguagesResultTransliterationLanguageCodeScriptsItemToScriptsItem",
            modelProperties: {
                code: {
                    serializedName: "code",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                nativeName: {
                    serializedName: "nativeName",
                    type: {
                        name: "String"
                    }
                },
                dir: {
                    serializedName: "dir",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var LanguagesResultTransliterationLanguageCodeScriptsItem = {
        serializedName: "LanguagesResult_transliteration_languageCode_scriptsItem",
        type: {
            name: "Composite",
            className: "LanguagesResultTransliterationLanguageCodeScriptsItem",
            modelProperties: {
                code: {
                    serializedName: "code",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                nativeName: {
                    serializedName: "nativeName",
                    type: {
                        name: "String"
                    }
                },
                dir: {
                    serializedName: "dir",
                    type: {
                        name: "String"
                    }
                },
                toScripts: {
                    serializedName: "toScripts",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "LanguagesResultTransliterationLanguageCodeScriptsItemToScriptsItem"
                            }
                        }
                    }
                }
            }
        }
    };
    var LanguagesResultTransliterationLanguageCode = {
        serializedName: "LanguagesResult_transliteration_languageCode",
        type: {
            name: "Composite",
            className: "LanguagesResultTransliterationLanguageCode",
            modelProperties: {
                name: {
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                nativeName: {
                    serializedName: "nativeName",
                    type: {
                        name: "String"
                    }
                },
                scripts: {
                    serializedName: "scripts",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "LanguagesResultTransliterationLanguageCodeScriptsItem"
                            }
                        }
                    }
                }
            }
        }
    };
    var LanguagesResultTransliteration = {
        serializedName: "LanguagesResult_transliteration",
        type: {
            name: "Composite",
            className: "LanguagesResultTransliteration",
            modelProperties: {
                languageCode: {
                    serializedName: "languageCode",
                    type: {
                        name: "Composite",
                        className: "LanguagesResultTransliterationLanguageCode"
                    }
                }
            }
        }
    };
    var LanguagesResultDictionaryLanguageCodeTranslationsItem = {
        serializedName: "LanguagesResult_dictionary_languageCode_translationsItem",
        type: {
            name: "Composite",
            className: "LanguagesResultDictionaryLanguageCodeTranslationsItem",
            modelProperties: {
                name: {
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                nativeName: {
                    serializedName: "nativeName",
                    type: {
                        name: "String"
                    }
                },
                dir: {
                    serializedName: "dir",
                    type: {
                        name: "String"
                    }
                },
                code: {
                    serializedName: "code",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var LanguagesResultDictionaryLanguageCode = {
        serializedName: "LanguagesResult_dictionary_languageCode",
        type: {
            name: "Composite",
            className: "LanguagesResultDictionaryLanguageCode",
            modelProperties: {
                name: {
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                nativeName: {
                    serializedName: "nativeName",
                    type: {
                        name: "String"
                    }
                },
                dir: {
                    serializedName: "dir",
                    type: {
                        name: "String"
                    }
                },
                translations: {
                    serializedName: "translations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "LanguagesResultDictionaryLanguageCodeTranslationsItem"
                            }
                        }
                    }
                }
            }
        }
    };
    var LanguagesResultDictionary = {
        serializedName: "LanguagesResult_dictionary",
        type: {
            name: "Composite",
            className: "LanguagesResultDictionary",
            modelProperties: {
                languageCode: {
                    serializedName: "languageCode",
                    type: {
                        name: "Composite",
                        className: "LanguagesResultDictionaryLanguageCode"
                    }
                }
            }
        }
    };
    var LanguagesResult = {
        serializedName: "LanguagesResult",
        type: {
            name: "Composite",
            className: "LanguagesResult",
            modelProperties: {
                translation: {
                    serializedName: "translation",
                    type: {
                        name: "Composite",
                        className: "LanguagesResultTranslation"
                    }
                },
                transliteration: {
                    serializedName: "transliteration",
                    type: {
                        name: "Composite",
                        className: "LanguagesResultTransliteration"
                    }
                },
                dictionary: {
                    serializedName: "dictionary",
                    type: {
                        name: "Composite",
                        className: "LanguagesResultDictionary"
                    }
                }
            }
        }
    };
    var DictionaryExampleResultItemExamplesItem = {
        serializedName: "DictionaryExampleResultItem_examplesItem",
        type: {
            name: "Composite",
            className: "DictionaryExampleResultItemExamplesItem",
            modelProperties: {
                sourcePrefix: {
                    serializedName: "sourcePrefix",
                    type: {
                        name: "String"
                    }
                },
                sourceTerm: {
                    serializedName: "sourceTerm",
                    type: {
                        name: "String"
                    }
                },
                sourceSuffix: {
                    serializedName: "sourceSuffix",
                    type: {
                        name: "String"
                    }
                },
                targetPrefix: {
                    serializedName: "targetPrefix",
                    type: {
                        name: "String"
                    }
                },
                targetTerm: {
                    serializedName: "targetTerm",
                    type: {
                        name: "String"
                    }
                },
                targetSuffix: {
                    serializedName: "targetSuffix",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var DictionaryExampleResultItem = {
        serializedName: "DictionaryExampleResultItem",
        type: {
            name: "Composite",
            className: "DictionaryExampleResultItem",
            modelProperties: {
                normalizedSource: {
                    serializedName: "normalizedSource",
                    type: {
                        name: "String"
                    }
                },
                normalizedTarget: {
                    serializedName: "normalizedTarget",
                    type: {
                        name: "String"
                    }
                },
                examples: {
                    serializedName: "examples",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "DictionaryExampleResultItemExamplesItem"
                            }
                        }
                    }
                }
            }
        }
    };
    var DictionaryLookupResultItemTranslationsItemBackTranslationsItem = {
        serializedName: "DictionaryLookupResultItem_translationsItem_backTranslationsItem",
        type: {
            name: "Composite",
            className: "DictionaryLookupResultItemTranslationsItemBackTranslationsItem",
            modelProperties: {
                normalizedText: {
                    serializedName: "normalizedText",
                    type: {
                        name: "String"
                    }
                },
                displayText: {
                    serializedName: "displayText",
                    type: {
                        name: "String"
                    }
                },
                numExamples: {
                    serializedName: "numExamples",
                    type: {
                        name: "Number"
                    }
                },
                frequencyCount: {
                    serializedName: "frequencyCount",
                    type: {
                        name: "Number"
                    }
                }
            }
        }
    };
    var DictionaryLookupResultItemTranslationsItem = {
        serializedName: "DictionaryLookupResultItem_translationsItem",
        type: {
            name: "Composite",
            className: "DictionaryLookupResultItemTranslationsItem",
            modelProperties: {
                normalizedTarget: {
                    serializedName: "normalizedTarget",
                    type: {
                        name: "String"
                    }
                },
                displayTarget: {
                    serializedName: "displayTarget",
                    type: {
                        name: "String"
                    }
                },
                posTag: {
                    serializedName: "posTag",
                    type: {
                        name: "String"
                    }
                },
                confidence: {
                    serializedName: "confidence",
                    type: {
                        name: "Number"
                    }
                },
                prefixWord: {
                    serializedName: "prefixWord",
                    type: {
                        name: "String"
                    }
                },
                backTranslations: {
                    serializedName: "backTranslations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "DictionaryLookupResultItemTranslationsItemBackTranslationsItem"
                            }
                        }
                    }
                }
            }
        }
    };
    var DictionaryLookupResultItem = {
        serializedName: "DictionaryLookupResultItem",
        type: {
            name: "Composite",
            className: "DictionaryLookupResultItem",
            modelProperties: {
                normalizedSource: {
                    serializedName: "normalizedSource",
                    type: {
                        name: "String"
                    }
                },
                displaySource: {
                    serializedName: "displaySource",
                    type: {
                        name: "String"
                    }
                },
                translations: {
                    serializedName: "translations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "DictionaryLookupResultItemTranslationsItem"
                            }
                        }
                    }
                }
            }
        }
    };
    var TranslateResultItemTranslationItem = {
        serializedName: "TranslateResultItem_translationItem",
        type: {
            name: "Composite",
            className: "TranslateResultItemTranslationItem",
            modelProperties: {
                text: {
                    serializedName: "text",
                    type: {
                        name: "String"
                    }
                },
                to: {
                    serializedName: "to",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var TranslateResultItem = {
        serializedName: "TranslateResultItem",
        type: {
            name: "Composite",
            className: "TranslateResultItem",
            modelProperties: {
                translation: {
                    serializedName: "translation",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "TranslateResultItemTranslationItem"
                            }
                        }
                    }
                }
            }
        }
    };
    var TranslateResultAllItemDetectedLanguage = {
        serializedName: "TranslateResultAllItem_detectedLanguage",
        type: {
            name: "Composite",
            className: "TranslateResultAllItemDetectedLanguage",
            modelProperties: {
                language: {
                    serializedName: "language",
                    type: {
                        name: "String"
                    }
                },
                score: {
                    serializedName: "score",
                    type: {
                        name: "Number"
                    }
                }
            }
        }
    };
    var TranslateResultAllItemTranslationsItemTransliteration = {
        serializedName: "TranslateResultAllItem_translationsItem_transliteration",
        type: {
            name: "Composite",
            className: "TranslateResultAllItemTranslationsItemTransliteration",
            modelProperties: {
                text: {
                    serializedName: "text",
                    type: {
                        name: "String"
                    }
                },
                script: {
                    serializedName: "script",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var TranslateResultAllItemTranslationsItemAlignment = {
        serializedName: "TranslateResultAllItem_translationsItem_alignment",
        type: {
            name: "Composite",
            className: "TranslateResultAllItemTranslationsItemAlignment",
            modelProperties: {
                proj: {
                    serializedName: "proj",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var TranslateResultAllItemTranslationsItemSentLenSrcSentLenItem = {
        serializedName: "TranslateResultAllItem_translationsItem_sentLen_srcSentLenItem",
        type: {
            name: "Composite",
            className: "TranslateResultAllItemTranslationsItemSentLenSrcSentLenItem",
            modelProperties: {
                integer: {
                    serializedName: "integer",
                    type: {
                        name: "Number"
                    }
                }
            }
        }
    };
    var TranslateResultAllItemTranslationsItemSentLenTransSentLenItem = {
        serializedName: "TranslateResultAllItem_translationsItem_sentLen_transSentLenItem",
        type: {
            name: "Composite",
            className: "TranslateResultAllItemTranslationsItemSentLenTransSentLenItem",
            modelProperties: {
                integer: {
                    serializedName: "integer",
                    type: {
                        name: "Number"
                    }
                }
            }
        }
    };
    var TranslateResultAllItemTranslationsItemSentLen = {
        serializedName: "TranslateResultAllItem_translationsItem_sentLen",
        type: {
            name: "Composite",
            className: "TranslateResultAllItemTranslationsItemSentLen",
            modelProperties: {
                srcSentLen: {
                    serializedName: "srcSentLen",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "TranslateResultAllItemTranslationsItemSentLenSrcSentLenItem"
                            }
                        }
                    }
                },
                transSentLen: {
                    serializedName: "transSentLen",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "TranslateResultAllItemTranslationsItemSentLenTransSentLenItem"
                            }
                        }
                    }
                }
            }
        }
    };
    var TranslateResultAllItemTranslationsItem = {
        serializedName: "TranslateResultAllItem_translationsItem",
        type: {
            name: "Composite",
            className: "TranslateResultAllItemTranslationsItem",
            modelProperties: {
                text: {
                    serializedName: "text",
                    type: {
                        name: "String"
                    }
                },
                transliteration: {
                    serializedName: "transliteration",
                    type: {
                        name: "Composite",
                        className: "TranslateResultAllItemTranslationsItemTransliteration"
                    }
                },
                to: {
                    serializedName: "to",
                    type: {
                        name: "String"
                    }
                },
                alignment: {
                    serializedName: "alignment",
                    type: {
                        name: "Composite",
                        className: "TranslateResultAllItemTranslationsItemAlignment"
                    }
                },
                sentLen: {
                    serializedName: "sentLen",
                    type: {
                        name: "Composite",
                        className: "TranslateResultAllItemTranslationsItemSentLen"
                    }
                }
            }
        }
    };
    var TranslateResultAllItem = {
        serializedName: "TranslateResultAllItem",
        type: {
            name: "Composite",
            className: "TranslateResultAllItem",
            modelProperties: {
                detectedLanguage: {
                    serializedName: "detectedLanguage",
                    type: {
                        name: "Composite",
                        className: "TranslateResultAllItemDetectedLanguage"
                    }
                },
                translations: {
                    serializedName: "translations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "TranslateResultAllItemTranslationsItem"
                            }
                        }
                    }
                }
            }
        }
    };
    var BreakSentenceResultItem = {
        serializedName: "BreakSentenceResultItem",
        type: {
            name: "Composite",
            className: "BreakSentenceResultItem",
            modelProperties: {
                sentLen: {
                    serializedName: "sentLen",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Number"
                            }
                        }
                    }
                }
            }
        }
    };
    var TransliterateResultItem = {
        serializedName: "TransliterateResultItem",
        type: {
            name: "Composite",
            className: "TransliterateResultItem",
            modelProperties: {
                text: {
                    serializedName: "text",
                    type: {
                        name: "String"
                    }
                },
                script: {
                    serializedName: "script",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var DetectResultItem = {
        serializedName: "DetectResultItem",
        type: {
            name: "Composite",
            className: "DetectResultItem",
            modelProperties: {
                text: {
                    serializedName: "text",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var BreakSentenceTextInput = {
        serializedName: "BreakSentenceTextInput",
        type: {
            name: "Composite",
            className: "BreakSentenceTextInput",
            modelProperties: {
                text: {
                    serializedName: "text",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ErrorMessageError = {
        serializedName: "ErrorMessage_error",
        type: {
            name: "Composite",
            className: "ErrorMessageError",
            modelProperties: {
                code: {
                    serializedName: "code",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "message",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ErrorMessage = {
        serializedName: "ErrorMessage",
        type: {
            name: "Composite",
            className: "ErrorMessage",
            modelProperties: {
                error: {
                    serializedName: "error",
                    type: {
                        name: "Composite",
                        className: "ErrorMessageError"
                    }
                }
            }
        }
    };
    var DetectTextInput = {
        serializedName: "DetectTextInput",
        type: {
            name: "Composite",
            className: "DetectTextInput",
            modelProperties: {
                text: {
                    serializedName: "text",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var DictionaryLookupTextInput = {
        serializedName: "DictionaryLookupTextInput",
        type: {
            name: "Composite",
            className: "DictionaryLookupTextInput",
            modelProperties: {
                text: {
                    serializedName: "text",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var DictionaryExampleTextInput = {
        serializedName: "DictionaryExampleTextInput",
        type: {
            name: "Composite",
            className: "DictionaryExampleTextInput",
            modelProperties: {
                text: {
                    serializedName: "text",
                    type: {
                        name: "String"
                    }
                },
                translation: {
                    serializedName: "translation",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var TranslateTextInput = {
        serializedName: "TranslateTextInput",
        type: {
            name: "Composite",
            className: "TranslateTextInput",
            modelProperties: {
                text: {
                    serializedName: "text",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var TransliterateTextInput = {
        serializedName: "TransliterateTextInput",
        type: {
            name: "Composite",
            className: "TransliterateTextInput",
            modelProperties: {
                text: {
                    serializedName: "text",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };

    var mappers = /*#__PURE__*/Object.freeze({
        __proto__: null,
        LanguagesResultTranslationLanguageCode: LanguagesResultTranslationLanguageCode,
        LanguagesResultTranslation: LanguagesResultTranslation,
        LanguagesResultTransliterationLanguageCodeScriptsItemToScriptsItem: LanguagesResultTransliterationLanguageCodeScriptsItemToScriptsItem,
        LanguagesResultTransliterationLanguageCodeScriptsItem: LanguagesResultTransliterationLanguageCodeScriptsItem,
        LanguagesResultTransliterationLanguageCode: LanguagesResultTransliterationLanguageCode,
        LanguagesResultTransliteration: LanguagesResultTransliteration,
        LanguagesResultDictionaryLanguageCodeTranslationsItem: LanguagesResultDictionaryLanguageCodeTranslationsItem,
        LanguagesResultDictionaryLanguageCode: LanguagesResultDictionaryLanguageCode,
        LanguagesResultDictionary: LanguagesResultDictionary,
        LanguagesResult: LanguagesResult,
        DictionaryExampleResultItemExamplesItem: DictionaryExampleResultItemExamplesItem,
        DictionaryExampleResultItem: DictionaryExampleResultItem,
        DictionaryLookupResultItemTranslationsItemBackTranslationsItem: DictionaryLookupResultItemTranslationsItemBackTranslationsItem,
        DictionaryLookupResultItemTranslationsItem: DictionaryLookupResultItemTranslationsItem,
        DictionaryLookupResultItem: DictionaryLookupResultItem,
        TranslateResultItemTranslationItem: TranslateResultItemTranslationItem,
        TranslateResultItem: TranslateResultItem,
        TranslateResultAllItemDetectedLanguage: TranslateResultAllItemDetectedLanguage,
        TranslateResultAllItemTranslationsItemTransliteration: TranslateResultAllItemTranslationsItemTransliteration,
        TranslateResultAllItemTranslationsItemAlignment: TranslateResultAllItemTranslationsItemAlignment,
        TranslateResultAllItemTranslationsItemSentLenSrcSentLenItem: TranslateResultAllItemTranslationsItemSentLenSrcSentLenItem,
        TranslateResultAllItemTranslationsItemSentLenTransSentLenItem: TranslateResultAllItemTranslationsItemSentLenTransSentLenItem,
        TranslateResultAllItemTranslationsItemSentLen: TranslateResultAllItemTranslationsItemSentLen,
        TranslateResultAllItemTranslationsItem: TranslateResultAllItemTranslationsItem,
        TranslateResultAllItem: TranslateResultAllItem,
        BreakSentenceResultItem: BreakSentenceResultItem,
        TransliterateResultItem: TransliterateResultItem,
        DetectResultItem: DetectResultItem,
        BreakSentenceTextInput: BreakSentenceTextInput,
        ErrorMessageError: ErrorMessageError,
        ErrorMessage: ErrorMessage,
        DetectTextInput: DetectTextInput,
        DictionaryLookupTextInput: DictionaryLookupTextInput,
        DictionaryExampleTextInput: DictionaryExampleTextInput,
        TranslateTextInput: TranslateTextInput,
        TransliterateTextInput: TransliterateTextInput
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */

    var Mappers = /*#__PURE__*/Object.freeze({
        __proto__: null,
        BreakSentenceResultItem: BreakSentenceResultItem,
        BreakSentenceTextInput: BreakSentenceTextInput,
        DetectResultItem: DetectResultItem,
        DetectTextInput: DetectTextInput,
        DictionaryExampleResultItem: DictionaryExampleResultItem,
        DictionaryExampleResultItemExamplesItem: DictionaryExampleResultItemExamplesItem,
        DictionaryExampleTextInput: DictionaryExampleTextInput,
        DictionaryLookupResultItem: DictionaryLookupResultItem,
        DictionaryLookupResultItemTranslationsItem: DictionaryLookupResultItemTranslationsItem,
        DictionaryLookupResultItemTranslationsItemBackTranslationsItem: DictionaryLookupResultItemTranslationsItemBackTranslationsItem,
        DictionaryLookupTextInput: DictionaryLookupTextInput,
        ErrorMessage: ErrorMessage,
        ErrorMessageError: ErrorMessageError,
        LanguagesResult: LanguagesResult,
        LanguagesResultDictionary: LanguagesResultDictionary,
        LanguagesResultDictionaryLanguageCode: LanguagesResultDictionaryLanguageCode,
        LanguagesResultDictionaryLanguageCodeTranslationsItem: LanguagesResultDictionaryLanguageCodeTranslationsItem,
        LanguagesResultTranslation: LanguagesResultTranslation,
        LanguagesResultTranslationLanguageCode: LanguagesResultTranslationLanguageCode,
        LanguagesResultTransliteration: LanguagesResultTransliteration,
        LanguagesResultTransliterationLanguageCode: LanguagesResultTransliterationLanguageCode,
        LanguagesResultTransliterationLanguageCodeScriptsItem: LanguagesResultTransliterationLanguageCodeScriptsItem,
        LanguagesResultTransliterationLanguageCodeScriptsItemToScriptsItem: LanguagesResultTransliterationLanguageCodeScriptsItemToScriptsItem,
        TranslateResultAllItem: TranslateResultAllItem,
        TranslateResultAllItemDetectedLanguage: TranslateResultAllItemDetectedLanguage,
        TranslateResultAllItemTranslationsItem: TranslateResultAllItemTranslationsItem,
        TranslateResultAllItemTranslationsItemAlignment: TranslateResultAllItemTranslationsItemAlignment,
        TranslateResultAllItemTranslationsItemSentLen: TranslateResultAllItemTranslationsItemSentLen,
        TranslateResultAllItemTranslationsItemSentLenSrcSentLenItem: TranslateResultAllItemTranslationsItemSentLenSrcSentLenItem,
        TranslateResultAllItemTranslationsItemSentLenTransSentLenItem: TranslateResultAllItemTranslationsItemSentLenTransSentLenItem,
        TranslateResultAllItemTranslationsItemTransliteration: TranslateResultAllItemTranslationsItemTransliteration,
        TranslateTextInput: TranslateTextInput,
        TransliterateResultItem: TransliterateResultItem,
        TransliterateTextInput: TransliterateTextInput
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var acceptLanguage = {
        parameterPath: [
            "options",
            "acceptLanguage"
        ],
        mapper: {
            serializedName: "Accept-Language",
            type: {
                name: "String"
            }
        }
    };
    var apiVersion = {
        parameterPath: "apiVersion",
        mapper: {
            required: true,
            serializedName: "api-version",
            defaultValue: '3.0',
            type: {
                name: "String"
            }
        }
    };
    var category = {
        parameterPath: [
            "options",
            "category"
        ],
        mapper: {
            serializedName: "category",
            type: {
                name: "String"
            }
        }
    };
    var endpoint = {
        parameterPath: "endpoint",
        mapper: {
            required: true,
            serializedName: "Endpoint",
            defaultValue: '',
            type: {
                name: "String"
            }
        },
        skipEncoding: true
    };
    var from0 = {
        parameterPath: "from",
        mapper: {
            required: true,
            serializedName: "from",
            type: {
                name: "String"
            }
        }
    };
    var from1 = {
        parameterPath: [
            "options",
            "from"
        ],
        mapper: {
            serializedName: "from",
            type: {
                name: "String"
            }
        }
    };
    var fromScript0 = {
        parameterPath: [
            "options",
            "fromScript"
        ],
        mapper: {
            serializedName: "fromScript",
            type: {
                name: "String"
            }
        }
    };
    var fromScript1 = {
        parameterPath: "fromScript",
        mapper: {
            required: true,
            serializedName: "fromScript",
            type: {
                name: "String"
            }
        }
    };
    var includeAlignment = {
        parameterPath: [
            "options",
            "includeAlignment"
        ],
        mapper: {
            serializedName: "includeAlignment",
            type: {
                name: "Boolean"
            }
        }
    };
    var includeSentenceLength = {
        parameterPath: [
            "options",
            "includeSentenceLength"
        ],
        mapper: {
            serializedName: "includeSentenceLength",
            type: {
                name: "Boolean"
            }
        }
    };
    var language0 = {
        parameterPath: [
            "options",
            "language"
        ],
        mapper: {
            serializedName: "Language",
            type: {
                name: "String"
            }
        }
    };
    var language1 = {
        parameterPath: "language",
        mapper: {
            required: true,
            serializedName: "language",
            type: {
                name: "String"
            }
        }
    };
    var profanityAction = {
        parameterPath: [
            "options",
            "profanityAction"
        ],
        mapper: {
            serializedName: "profanityAction",
            type: {
                name: "String"
            }
        }
    };
    var profanityMarker = {
        parameterPath: [
            "options",
            "profanityMarker"
        ],
        mapper: {
            serializedName: "profanityMarker",
            type: {
                name: "String"
            }
        }
    };
    var scope = {
        parameterPath: [
            "options",
            "scope"
        ],
        mapper: {
            serializedName: "scope",
            constraints: {
                MaxItems: 3,
                MinItems: 0
            },
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Csv
    };
    var script = {
        parameterPath: [
            "options",
            "script"
        ],
        mapper: {
            serializedName: "Script",
            type: {
                name: "String"
            }
        }
    };
    var suggestedFrom = {
        parameterPath: [
            "options",
            "suggestedFrom"
        ],
        mapper: {
            serializedName: "suggestedFrom",
            type: {
                name: "String"
            }
        }
    };
    var textType = {
        parameterPath: [
            "options",
            "textType"
        ],
        mapper: {
            serializedName: "textType",
            type: {
                name: "String"
            }
        }
    };
    var to0 = {
        parameterPath: "to",
        mapper: {
            required: true,
            serializedName: "to",
            type: {
                name: "String"
            }
        }
    };
    var to1 = {
        parameterPath: "to",
        mapper: {
            required: true,
            serializedName: "to",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Csv
    };
    var toScript0 = {
        parameterPath: [
            "options",
            "toScript"
        ],
        mapper: {
            serializedName: "toScript",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        },
        collectionFormat: msRest.QueryCollectionFormat.Csv
    };
    var toScript1 = {
        parameterPath: "toScript",
        mapper: {
            required: true,
            serializedName: "toScript",
            type: {
                name: "String"
            }
        }
    };
    var xClientTraceId = {
        parameterPath: [
            "options",
            "xClientTraceId"
        ],
        mapper: {
            serializedName: "X-ClientTraceId",
            type: {
                name: "String"
            }
        }
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Translator. */
    var Translator = /** @class */ (function () {
        /**
         * Create a Translator.
         * @param {TranslatorTextClientContext} client Reference to the service client.
         */
        function Translator(client) {
            this.client = client;
        }
        Translator.prototype.breakSentence = function (text, options, callback) {
            return this.client.sendOperationRequest({
                text: text,
                options: options
            }, breakSentenceOperationSpec, callback);
        };
        Translator.prototype.detect = function (text, options, callback) {
            return this.client.sendOperationRequest({
                text: text,
                options: options
            }, detectOperationSpec, callback);
        };
        Translator.prototype.dictionaryLookup = function (from, to, text, options, callback) {
            return this.client.sendOperationRequest({
                from: from,
                to: to,
                text: text,
                options: options
            }, dictionaryLookupOperationSpec, callback);
        };
        Translator.prototype.dictionaryExamples = function (from, to, text, options, callback) {
            return this.client.sendOperationRequest({
                from: from,
                to: to,
                text: text,
                options: options
            }, dictionaryExamplesOperationSpec, callback);
        };
        Translator.prototype.languages = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, languagesOperationSpec, callback);
        };
        Translator.prototype.translate = function (to, text, options, callback) {
            return this.client.sendOperationRequest({
                to: to,
                text: text,
                options: options
            }, translateOperationSpec, callback);
        };
        Translator.prototype.transliterate = function (language, fromScript, toScript, texts, options, callback) {
            return this.client.sendOperationRequest({
                language: language,
                fromScript: fromScript,
                toScript: toScript,
                texts: texts,
                options: options
            }, transliterateOperationSpec, callback);
        };
        return Translator;
    }());
    // Operation Specifications
    var serializer = new msRest.Serializer(Mappers);
    var breakSentenceOperationSpec = {
        httpMethod: "POST",
        path: "BreakSentence",
        urlParameters: [
            endpoint
        ],
        queryParameters: [
            apiVersion,
            language0,
            script
        ],
        headerParameters: [
            xClientTraceId
        ],
        requestBody: {
            parameterPath: "text",
            mapper: {
                required: true,
                serializedName: "text",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BreakSentenceTextInput"
                        }
                    }
                }
            }
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "BreakSentenceResultItem"
                            }
                        }
                    }
                }
            },
            default: {
                bodyMapper: ErrorMessage
            }
        },
        serializer: serializer
    };
    var detectOperationSpec = {
        httpMethod: "POST",
        path: "Detect",
        urlParameters: [
            endpoint
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            xClientTraceId
        ],
        requestBody: {
            parameterPath: "text",
            mapper: {
                required: true,
                serializedName: "text",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DetectTextInput"
                        }
                    }
                }
            }
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "DetectResultItem"
                            }
                        }
                    }
                }
            },
            default: {
                bodyMapper: ErrorMessage
            }
        },
        serializer: serializer
    };
    var dictionaryLookupOperationSpec = {
        httpMethod: "POST",
        path: "Dictionary/Lookup",
        urlParameters: [
            endpoint
        ],
        queryParameters: [
            apiVersion,
            from0,
            to0
        ],
        headerParameters: [
            xClientTraceId
        ],
        requestBody: {
            parameterPath: "text",
            mapper: {
                required: true,
                serializedName: "text",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DictionaryLookupTextInput"
                        }
                    }
                }
            }
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "DictionaryLookupResultItem"
                            }
                        }
                    }
                }
            },
            default: {
                bodyMapper: ErrorMessage
            }
        },
        serializer: serializer
    };
    var dictionaryExamplesOperationSpec = {
        httpMethod: "POST",
        path: "Dictionary/Examples",
        urlParameters: [
            endpoint
        ],
        queryParameters: [
            apiVersion,
            from0,
            to0
        ],
        headerParameters: [
            xClientTraceId
        ],
        requestBody: {
            parameterPath: "text",
            mapper: {
                required: true,
                serializedName: "text",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DictionaryExampleTextInput"
                        }
                    }
                }
            }
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "DictionaryExampleResultItem"
                            }
                        }
                    }
                }
            },
            default: {
                bodyMapper: ErrorMessage
            }
        },
        serializer: serializer
    };
    var languagesOperationSpec = {
        httpMethod: "GET",
        path: "Languages",
        urlParameters: [
            endpoint
        ],
        queryParameters: [
            apiVersion,
            scope
        ],
        headerParameters: [
            acceptLanguage,
            xClientTraceId
        ],
        responses: {
            200: {
                bodyMapper: LanguagesResult
            },
            default: {
                bodyMapper: ErrorMessage
            }
        },
        serializer: serializer
    };
    var translateOperationSpec = {
        httpMethod: "POST",
        path: "translate",
        urlParameters: [
            endpoint
        ],
        queryParameters: [
            apiVersion,
            from1,
            to1,
            textType,
            category,
            profanityAction,
            profanityMarker,
            includeAlignment,
            includeSentenceLength,
            suggestedFrom,
            fromScript0,
            toScript0
        ],
        headerParameters: [
            xClientTraceId
        ],
        requestBody: {
            parameterPath: "text",
            mapper: {
                required: true,
                serializedName: "text",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TranslateTextInput"
                        }
                    }
                }
            }
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "TranslateResultAllItem"
                            }
                        }
                    }
                }
            },
            default: {
                bodyMapper: ErrorMessage
            }
        },
        serializer: serializer
    };
    var transliterateOperationSpec = {
        httpMethod: "POST",
        path: "transliterate",
        urlParameters: [
            endpoint
        ],
        queryParameters: [
            apiVersion,
            language1,
            fromScript1,
            toScript1
        ],
        headerParameters: [
            xClientTraceId
        ],
        requestBody: {
            parameterPath: "texts",
            mapper: {
                required: true,
                serializedName: "texts",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TransliterateTextInput"
                        }
                    }
                }
            }
        },
        responses: {
            200: {
                bodyMapper: {
                    serializedName: "parsedResponse",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "TransliterateResultItem"
                            }
                        }
                    }
                }
            },
            default: {
                bodyMapper: ErrorMessage
            }
        },
        serializer: serializer
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var packageName = "@azure/cognitiveservices-translatortext";
    var packageVersion = "1.0.1";
    var TranslatorTextClientContext = /** @class */ (function (_super) {
        __extends(TranslatorTextClientContext, _super);
        /**
         * Initializes a new instance of the TranslatorTextClientContext class.
         * @param endpoint Supported Cognitive Services endpoints
         * @param credentials Subscription credentials which uniquely identify client subscription.
         * @param [options] The parameter options
         */
        function TranslatorTextClientContext(credentials, endpoint, options) {
            var _this = this;
            if (endpoint == undefined) {
                throw new Error("'endpoint' cannot be null.");
            }
            if (credentials == undefined) {
                throw new Error("'credentials' cannot be null.");
            }
            if (!options) {
                options = {};
            }
            if (!options.userAgent) {
                var defaultUserAgent = msRest.getDefaultUserAgentValue();
                options.userAgent = packageName + "/" + packageVersion + " " + defaultUserAgent;
            }
            _this = _super.call(this, credentials, options) || this;
            _this.apiVersion = '3.0';
            _this.baseUri = "{Endpoint}";
            _this.requestContentType = "application/json; charset=utf-8";
            _this.endpoint = endpoint;
            _this.credentials = credentials;
            if (options.apiVersion !== null && options.apiVersion !== undefined) {
                _this.apiVersion = options.apiVersion;
            }
            return _this;
        }
        return TranslatorTextClientContext;
    }(msRest.ServiceClient));

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var TranslatorTextClient = /** @class */ (function (_super) {
        __extends(TranslatorTextClient, _super);
        /**
         * Initializes a new instance of the TranslatorTextClient class.
         * @param endpoint Supported Cognitive Services endpoints
         * @param credentials Subscription credentials which uniquely identify client subscription.
         * @param [options] The parameter options
         */
        function TranslatorTextClient(credentials, endpoint, options) {
            var _this = _super.call(this, credentials, endpoint, options) || this;
            _this.translator = new Translator(_this);
            return _this;
        }
        return TranslatorTextClient;
    }(TranslatorTextClientContext));

    exports.Translator = Translator;
    exports.TranslatorTextClient = TranslatorTextClient;
    exports.TranslatorTextClientContext = TranslatorTextClientContext;
    exports.TranslatorTextMappers = mappers;
    exports.TranslatorTextModels = index;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=cognitiveservices-translatortext.js.map
